{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LYJ\\\\Desktop\\\\github\\\\React\\\\anime\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './style.css';\nimport { CSSTransition } from 'react-transition-group';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // show: true\n      list: []\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.state.list.map(item => {\n      return item;\n    }), React.createElement(\"button\", {\n      onClick: this.handleToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"toggle\"));\n  }\n\n  handleToggle() {\n    this.setState({\n      show: this.state.show ? false : true\n    });\n  }\n\n  handleAddItem() {\n    this.setState(prevState => {\n      return {\n        list: [...prevState.list, 'item']\n      };\n    });\n  }\n\n}\n\nexport default App;\n{\n  /*<CSSTransition*/\n}\n{\n  /*in={this.state.show}*/\n}\n{\n  /*timeout={1000}*/\n}\n{\n  /*classNames='fade'*/\n}\n{\n  /*unmountOnExit*/\n}\n{\n  /*onEntered={(el) => {*/\n}\n{\n  /*el.style.color = 'blue'*/\n}\n{\n  /*}}*/\n}\n{\n  /*appear={true}*/\n}\n{\n  /*>*/\n}\n{\n  /*/!*appear 第一次显示也要显示效果*!/*/\n}\n{\n  /*/!*onEntered 入场动画结束之后执行*!/*/\n}\n{\n  /*<div>hello</div>*/\n}\n{\n  /*</CSSTransition>*/\n}","map":{"version":3,"sources":["C:\\Users\\LYJ\\Desktop\\github\\React\\anime\\src\\App.js"],"names":["React","Component","Fragment","CSSTransition","App","constructor","props","state","list","handleToggle","bind","render","map","item","setState","show","handleAddItem","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,aAAP;AACA,SAAQC,aAAR,QAA4B,wBAA5B;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKJ,KAAL,CAAWC,IAAX,CAAgBI,GAAhB,CAAqBC,IAAD,IAAS;AACzB,aAAOA,IAAP;AACH,KAFD,CAFR,EAMI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CADJ;AAUH;;AAEDA,EAAAA,YAAY,GAAG;AACX,SAAKK,QAAL,CAAc;AACVC,MAAAA,IAAI,EAAE,KAAKR,KAAL,CAAWQ,IAAX,GAAkB,KAAlB,GAA0B;AADtB,KAAd;AAGH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,SAAKF,QAAL,CAAeG,SAAD,IAAe;AACzB,aAAO;AACHT,QAAAA,IAAI,EAAE,CAAC,GAAGS,SAAS,CAACT,IAAd,EAAoB,MAApB;AADH,OAAP;AAGH,KAJD;AAKH;;AAnCuB;;AAsC5B,eAAeJ,GAAf;AAEA;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport './style.css';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // show: true\r\n            list: []\r\n        }\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.list.map((item) =>{\r\n                        return item;\r\n                    })\r\n                }\r\n                <button onClick={this.handleToggle}>toggle</button>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    handleToggle() {\r\n        this.setState({\r\n            show: this.state.show ? false : true\r\n        })\r\n    }\r\n\r\n    handleAddItem() {\r\n        this.setState((prevState) => {\r\n            return {\r\n                list: [...prevState.list, 'item']\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n{/*<CSSTransition*/\r\n}\r\n{/*in={this.state.show}*/\r\n}\r\n{/*timeout={1000}*/\r\n}\r\n{/*classNames='fade'*/\r\n}\r\n{/*unmountOnExit*/\r\n}\r\n{/*onEntered={(el) => {*/\r\n}\r\n{/*el.style.color = 'blue'*/\r\n}\r\n{/*}}*/\r\n}\r\n{/*appear={true}*/\r\n}\r\n{/*>*/\r\n}\r\n{/*/!*appear 第一次显示也要显示效果*!/*/\r\n}\r\n{/*/!*onEntered 入场动画结束之后执行*!/*/\r\n}\r\n{/*<div>hello</div>*/\r\n}\r\n{/*</CSSTransition>*/\r\n}"]},"metadata":{},"sourceType":"module"}