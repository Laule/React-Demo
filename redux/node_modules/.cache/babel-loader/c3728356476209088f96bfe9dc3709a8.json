{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LYJ\\\\Desktop\\\\project\\\\todolist\\\\src\\\\TodoList.js\";\nimport React, { Component, Fragment } from 'react'; // JSX 需要一个最外层的标签包裹住\n// 如果不想用标签包裹，可以使用占位符（Fragment）标签\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: '',\n      list: [],\n      qqq: ''\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.inputValue,\n      onChange: this.handleInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"\\u5B66\\u82F1\\u8BED\"), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"\\u8003\\u9A7E\\u7167\")));\n  }\n\n  handleInputChange(e) {\n    // React修改数据内容必须使用setState属性\n    this.setState({\n      inputValue: e.target.value,\n      qqq: e.target.value\n    });\n    console.log(this); // this 指向问题\n\n    console.log(this.state.qqq); // this 指向问题\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:\\Users\\LYJ\\Desktop\\project\\todolist\\src\\TodoList.js"],"names":["React","Component","Fragment","TodoList","constructor","props","state","inputValue","list","qqq","render","handleInputChange","bind","e","setState","target","value","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CAEA;AACA;;AACA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,GAAG,EAAC;AAHK,KAAb;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,UAArC;AAAiD,MAAA,QAAQ,EAAE,KAAKI,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFJ,CANJ,CADJ;AAaH;;AACDD,EAAAA,iBAAiB,CAACE,CAAD,EACjB;AACI;AACA,SAAKC,QAAL,CAAc;AACVP,MAAAA,UAAU,EAACM,CAAC,CAACE,MAAF,CAASC,KADV;AAEVP,MAAAA,GAAG,EAACI,CAAC,CAACE,MAAF,CAASC;AAFH,KAAd;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EANJ,CAMuB;;AACnBD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWG,GAAvB,EAPJ,CAOiC;AAChC;;AAlC4B;;AAqCjC,eAAeN,QAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\r\n\r\n// JSX 需要一个最外层的标签包裹住\r\n// 如果不想用标签包裹，可以使用占位符（Fragment）标签\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: '',\r\n            list: [],\r\n            qqq:''\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {/**借助ES6的bind函数 来改变this指向 */}\r\n                <input type=\"text\" value={this.state.inputValue} onChange={this.handleInputChange.bind(this)}/>\r\n                <button>\r\n                    提交\r\n                </button>\r\n                <ul>\r\n                    <li>学英语</li>\r\n                    <li>考驾照</li>\r\n                </ul>\r\n            </Fragment>\r\n        );\r\n    }\r\n    handleInputChange(e)\r\n    {\r\n        // React修改数据内容必须使用setState属性\r\n        this.setState({\r\n            inputValue:e.target.value,\r\n            qqq:e.target.value\r\n        });\r\n        console.log(this); // this 指向问题\r\n        console.log(this.state.qqq); // this 指向问题\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n"]},"metadata":{},"sourceType":"module"}