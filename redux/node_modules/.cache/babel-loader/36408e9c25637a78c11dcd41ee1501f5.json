{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LYJ\\\\Desktop\\\\github\\\\React\\\\anime\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport './style.css';\nimport { CSSTransition } from 'react-transition-group';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // show: true\n      list: []\n    };\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleAddItem = this.handleAddItem.bind(this);\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, this.state.list.map((index, item) => {\n      return React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, item);\n    }), React.createElement(\"button\", {\n      onClick: this.handleAddItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"toggle\"));\n  }\n\n  handleToggle() {\n    this.setState({\n      show: this.state.show ? false : true\n    });\n  }\n\n  handleAddItem() {\n    this.setState(prevState => {\n      return {\n        list: [...prevState.list, 'item']\n      };\n    });\n  }\n\n}\n\nexport default App;\n{\n  /*<CSSTransition*/\n}\n{\n  /*in={this.state.show}*/\n}\n{\n  /*timeout={1000}*/\n}\n{\n  /*classNames='fade'*/\n}\n{\n  /*unmountOnExit*/\n}\n{\n  /*onEntered={(el) => {*/\n}\n{\n  /*el.style.color = 'blue'*/\n}\n{\n  /*}}*/\n}\n{\n  /*appear={true}*/\n}\n{\n  /*>*/\n}\n{\n  /*/!*appear 第一次显示也要显示效果*!/*/\n}\n{\n  /*/!*onEntered 入场动画结束之后执行*!/*/\n}\n{\n  /*<div>hello</div>*/\n}\n{\n  /*</CSSTransition>*/\n}","map":{"version":3,"sources":["C:\\Users\\LYJ\\Desktop\\github\\React\\anime\\src\\App.js"],"names":["React","Component","Fragment","CSSTransition","App","constructor","props","state","list","handleToggle","bind","handleAddItem","render","map","index","item","setState","show","prevState"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,aAAP;AACA,SAAQC,aAAR,QAA4B,wBAA5B;;AAGA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AACxBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACH;;AAEDE,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AACjC,aACI;AAAK,QAAA,GAAG,EAAED,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBC,IAAlB,CADJ;AAGH,KAJD,CAFR,EAQI;AAAQ,MAAA,OAAO,EAAE,KAAKJ,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CADJ;AAYH;;AAEDF,EAAAA,YAAY,GAAG;AACX,SAAKO,QAAL,CAAc;AACVC,MAAAA,IAAI,EAAE,KAAKV,KAAL,CAAWU,IAAX,GAAkB,KAAlB,GAA0B;AADtB,KAAd;AAGH;;AAEDN,EAAAA,aAAa,GAAG;AACZ,SAAKK,QAAL,CAAeE,SAAD,IAAe;AACzB,aAAO;AACHV,QAAAA,IAAI,EAAE,CAAC,GAAGU,SAAS,CAACV,IAAd,EAAoB,MAApB;AADH,OAAP;AAGH,KAJD;AAKH;;AAtCuB;;AAyC5B,eAAeJ,GAAf;AAEA;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA;AACD;AAAC;AACA","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport './style.css';\r\nimport {CSSTransition} from 'react-transition-group';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // show: true\r\n            list: []\r\n        }\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n        this.handleAddItem = this.handleAddItem.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                {\r\n                    this.state.list.map((index, item) => {\r\n                        return (\r\n                            <div key={index}>{item}</div>\r\n                        )\r\n                    })\r\n                }\r\n                <button onClick={this.handleAddItem}>toggle</button>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    handleToggle() {\r\n        this.setState({\r\n            show: this.state.show ? false : true\r\n        })\r\n    }\r\n\r\n    handleAddItem() {\r\n        this.setState((prevState) => {\r\n            return {\r\n                list: [...prevState.list, 'item']\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n{/*<CSSTransition*/\r\n}\r\n{/*in={this.state.show}*/\r\n}\r\n{/*timeout={1000}*/\r\n}\r\n{/*classNames='fade'*/\r\n}\r\n{/*unmountOnExit*/\r\n}\r\n{/*onEntered={(el) => {*/\r\n}\r\n{/*el.style.color = 'blue'*/\r\n}\r\n{/*}}*/\r\n}\r\n{/*appear={true}*/\r\n}\r\n{/*>*/\r\n}\r\n{/*/!*appear 第一次显示也要显示效果*!/*/\r\n}\r\n{/*/!*onEntered 入场动画结束之后执行*!/*/\r\n}\r\n{/*<div>hello</div>*/\r\n}\r\n{/*</CSSTransition>*/\r\n}"]},"metadata":{},"sourceType":"module"}