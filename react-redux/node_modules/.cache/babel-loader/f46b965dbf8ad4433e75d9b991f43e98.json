{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LYJ\\\\Desktop\\\\project\\\\React\\\\react-redux\\\\src\\\\TodoList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass TodoList extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.props.inputValue,\n      onChange: this.props.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.props.handleBtnClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.list.map((item, index) => {\n      return React.createElement(\"li\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, index);\n    })));\n  }\n\n} // 将state映射给props\n\n\nconst mapStateToProps = state => {\n  return {\n    inputValue: state.inputValue,\n    list: state.list\n  };\n}; // map Dispatch Props\n\n\nconst mapDispatchProps = dispatch => {\n  return {\n    handleInputChange(e) {\n      const action = {\n        type: 'change_input_value',\n        value: e.target.value\n      };\n      dispatch(action); // console.log(e.target.value);\n    },\n\n    handleBtnClick() {\n      const action = {\n        type: 'add_list_item'\n      };\n      dispatch(action);\n    }\n\n  };\n}; // 让TodoList组件和store做连接,规则在mapStateToProps里面\n\n\nexport default connect(mapStateToProps, mapDispatchProps)(TodoList); //connect 是连接\n// 谁和谁连接？TodoList和store进行连接\n// 怎么做连接，映射关系mapStateToProps\n// 如果需要对数据进行修改，可以使用mapDispatchProps进行修改","map":{"version":3,"sources":["C:\\Users\\LYJ\\Desktop\\project\\React\\react-redux\\src\\TodoList.js"],"names":["React","Component","connect","TodoList","render","props","inputValue","handleInputChange","handleBtnClick","list","map","item","index","mapStateToProps","state","mapDispatchProps","dispatch","e","action","type","value","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC7BG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,UAAzB;AAAqC,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,iBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKH,KAAL,CAAWI,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC9B,aAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBA,KAAjB,CAAP;AACH,KAFD,CAFR,CALJ,CADJ;AAeH;;AAjB4B,C,CAoBjC;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,UAAU,EAAEQ,KAAK,CAACR,UADf;AAEHG,IAAAA,IAAI,EAAEK,KAAK,CAACL;AAFT,GAAP;AAIH,CALD,C,CAMA;;;AACA,MAAMM,gBAAgB,GAAIC,QAAD,IAAc;AACnC,SAAO;AACHT,IAAAA,iBAAiB,CAACU,CAAD,EAAI;AACjB,YAAMC,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE,oBADK;AAEXC,QAAAA,KAAK,EAAEH,CAAC,CAACI,MAAF,CAASD;AAFL,OAAf;AAIAJ,MAAAA,QAAQ,CAACE,MAAD,CAAR,CALiB,CAMjB;AACH,KARE;;AASHV,IAAAA,cAAc,GAAG;AACb,YAAMU,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE;AADK,OAAf;AAGAH,MAAAA,QAAQ,CAACE,MAAD,CAAR;AACH;;AAdE,GAAP;AAgBH,CAjBD,C,CAoBA;;;AACA,eAAehB,OAAO,CAACW,eAAD,EAAkBE,gBAAlB,CAAP,CAA2CZ,QAA3C,CAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass TodoList extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <input value={this.props.inputValue} onChange={this.props.handleInputChange}/>\r\n                    <button onClick={this.props.handleBtnClick}>提交</button>\r\n                </div>\r\n                <ul>\r\n                    {\r\n                        this.props.list.map((item,index)=>{\r\n                            return <li key={index}>{index}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// 将state映射给props\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        inputValue: state.inputValue,\r\n        list: state.list\r\n    }\r\n}\r\n// map Dispatch Props\r\nconst mapDispatchProps = (dispatch) => {\r\n    return {\r\n        handleInputChange(e) {\r\n            const action = {\r\n                type: 'change_input_value',\r\n                value: e.target.value\r\n            };\r\n            dispatch(action);\r\n            // console.log(e.target.value);\r\n        },\r\n        handleBtnClick() {\r\n            const action = {\r\n                type: 'add_list_item'\r\n            };\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// 让TodoList组件和store做连接,规则在mapStateToProps里面\r\nexport default connect(mapStateToProps, mapDispatchProps)(TodoList);\r\n\r\n//connect 是连接\r\n// 谁和谁连接？TodoList和store进行连接\r\n// 怎么做连接，映射关系mapStateToProps\r\n// 如果需要对数据进行修改，可以使用mapDispatchProps进行修改"]},"metadata":{},"sourceType":"module"}